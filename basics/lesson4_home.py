"""Домашнее задание к уроку 4 курса Python basic"""

# ЗАДАНИЕ 1 Напишите код
"""
В переменной example хранится строка. Напишите код, который с помощью одного условного оператора проверял бы, 
что в этом слове присутствуют все три буквы: t, h и o (в произвольном порядке). 
Если проверка проходит, то в переменную answer_1 код должен вместо None записать ДА, иначе - НЕТ.
"""
example = "Python"
# Здесь пишите код программы
if 't' in example and 'h' in example and 'o' in example:
    print(answer_1='Да')
else:
    print(answer_1='Нет')

answer_1 = None


# ЗАДАНИЕ 2 Напишите код
"""
В переменной cities хранится список городов. С помощью условного оператора выясните, 
есть ли в этом списке город Минск, если да, то удалите его (с помощью самообразования узнайте, 
как удалять элементы из списка). В переменную answer_2 вместо None код должен поместить получившийся список, 
но только в виде строки с городами через пробел.
"""
cities = ["Брест", "Витебск", "Минск", "Мозырь", "Несвиж", "Гродно"]
# Здесь пишите код программы
if "Минск" in cities:
    cities.pop(cities.index("Минск"))
    print(answer_2=cities)
else:
    pass

answer_2 = None


# ЗАДАНИЕ 3 Напишите код
"""Вы разрабатываете программу по упаковке открыток. 
В переменных хранятся размеры конверта и открытки соответственно (в мм). 
Необходимо определить, войдет ли открытка в конверт. 
Важно: для размещения открытки в конверте необходим зазор в 1 мм с каждой стороны. 
Открытку можно поворачивать на 90 градусов. В переменную answer_3 вместо None код должен поместить ДА, 
если входит и НЕТ - если не входит.
"""
# Размеры конверта
envelope_width = 120
envelope_hight = 70
# Размеры открытки
card_width = 60
card_hight = 120
# Здесь пишите код программы
if (card_width + 2 < envelope_width or card_width +2 < envelope_hight
        and card_hight +2 < envelope_hight or card_hight +2 < envelope_width):
    print(answer_3='Да')
else:
    print(answer_3='Нет')

answer_3 = None


# ЗАДАНИЕ 4 Напишите код
"""
В переменной num хранится шестизначное число. Необходимо определить, является ли это число счастливым. 
Счастливым называют такое шестизначное число, в котором сумма его первых трех цифр равна сумме его последних трех цифр. 
Если число счастливое, то в переменную answer_4 код должен вместо None записать ДА, иначе - НЕТ.
"""
num = 712334
# Здесь пишите код программы
num_str = str(num)
a, b, c = int(num_str[0]), int(num_str[1]), int(num_str[2])
d, e, f = int(num_str[3]), int(num_str[4]), int(num_str[5])
if a + b + c == d + e + f:
    print(answer_4='Да')
else:
    print(answer_4='Нет')

answer_4 = None


# ЗАДАНИЕ 5 Напишите код
"""
Имеется три числа. С помощью условных операторов код должен определить наименьшее среди них 
и записать его в переменную answer_5 вместо None. Реализовать программу необходимо без использования функции min.
"""
a = 7
b = 10
c = -2
# Здесь пишите код программы
answer_5 = a
if b < answer_5:
    answer_5=b
if c < answer_5:
    answer_5=c
    print(answer_5)
else:
    pass


answer_5 = None


# ЗАДАНИЕ 6 Напишите код
"""
В переменной month хранится порядковый номер месяца (1, 2, ..., 12). 
Реализуйте код, который сохраняет в переменной answer_6 вместо значения None количество дней в данном месяце. 
На вход не будет подаваться високосный год. Решите задачу через условный оператор, 
в котором используйте не более трех блоков.
"""
month = 10
# Здесь пишите код программы
if month in (1,3,5,7,8,10,12):
    print(answer_6=31)
elif month in (4,6,9,11):
    print(answer_6=30)
elif month == 2:
    print(answer_6=28)
else:
    pass


answer_6 = None


# ЗАДАНИЕ 7 Напишите код
"""
B переменной date хранится дата некоторого дня (день и месяц). 
По этой дате определите дату предыдущего дня и дату следующего дня. 
Код должен записать в переменную answer_7 вместо значения None 
форматированную строку с датами этих дней в формате dd.mm (d-номер дня, m - номер месяца) через пробел, 
например "02.01 04.01". Обратите внимание на обязательное наличие незначащих нулей в датах. 
Также необходимо учесть следующие ограничения
1. Год не является високосным
2. Дата в переменной date не может быть 1 января и 31 декабря

Для справки: Число дней в месяцах не високосного года, начиная с января: 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
"""
date = "31.08"
# Здесь пишите код программы
date = "31.08"
date_day = int(date[0:2])
date_month = int(date[3:5])
days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30,31 ]
if date_day > 1:
    last_day = date_day - 1
    last_month = date_month
else:
    last_month = date_month -1
    last_day  = days_in_month[last_month - 1]
if date_day < days_in_month[date_month - 1]:
    next_day = date_day + 1
    next_month = date_month
else:
    next_day = 1
    next_month = date_month + 1

print(answer_7=f'{last_day:02d}.{last_month:02d} {next_day:02d}.{next_month:02d}')


answer_7 = None


# ЗАДАНИЕ 8 Напишите код
"""
В переменной word хранится слово (строка). Реализуйте код, который помещает в переменную answer_8 
вместо значения None строку "палиндром", если введенное слово является палиндромом (одинаково читается и вперед и назад),
а иначе записывает строку "не палиндром". Проверку проводите без учета регистра.
"""
word = "Комок"
# Здесь пишите код программы
if word == word[::-1]:
    print(answer_8='палиндром')
else:
    print(answer_8='не палиндром')


answer_8 = None


# ЗАДАНИЕ 9 Напишите код
"""
В переменной sec хранится текущее время (секунды) в диапазоне [0; 59]. Если значение равно 59, то следующее должно быть 0. 
И так по кругу. Необходимо  вычислить следующее значение с проверкой граничного значения 59. 
Это значение код должен занести в переменную answer_9 вместо значения None.
"""
sec = 58
# Здесь пишите код программы

if sec ==59:
    next_sec = 0
else:
    next_sec = sec +1
    print(answer_0=next_sec)

answer_9 = None


# ЗАДАНИЕ 10 Напишите код
"""
В переменной gamma хранится список базовых нот. 
А в переменной triad имеется три целых числа в диапазоне от 1 до 7 - номера нот, в одну строчку через пробел. 
Необходимо занести в переменную answer_10 вместо значения None названия указанных нот в виде строки через пробел, 
но перед нотами "до" и "фа" дополнительно ставить символ диеза '#'. 

 Например для "2 3 4" результат должен быть "ре ми #фа".
"""
gamma = ['до', 'ре', 'ми', 'фа', 'соль', 'ля', 'си']
triad = "1 4 6"
# Здесь пишите код программы
gamma = ['до', 'ре', 'ми', 'фа', 'соль', 'ля', 'си']
triad = "1 4 6"

i1, i2, i3 = triad.split()

r1 = gamma[int(i1) - 1] if int(i1) >= 1 and int(i1) <= 7 else None
r2 = gamma[int(i2) - 1] if int(i2) >= 1 and int(i2) <= 7 else None
r3 = gamma[int(i3) - 1] if int(i3) >= 1 and int(i3) <= 7 else None

r1 = ('#' + r1) if r1 in ('до', 'фа') else r1
r2 = ('#' + r2) if r2 in ('до', 'фа') else r2
r3 = ('#' + r3) if r3 in ('до', 'фа') else r3

result = ' '.join([r1, r2, r3])
print(answer_10=result)
answer_10 = None

# ОТЛИЧНО! Теперь давайте запустим код и проверим Ваш результат.

# --- Блок проверки ответов. Здесь ничего не менять! ---

from hashlib import sha1 as sha

student_answers = [answer_1, answer_2, answer_3, answer_4, answer_5, answer_6, answer_7, answer_8, answer_9, answer_10]


def answer_check(student, right):
    return True if sha(student.encode('utf-8')).hexdigest() == right else False


salt = "n5hj4i39fvt5"
prepared_answers = [str(x).lower().replace(" ", "") + salt for x in student_answers]

right_answes = [
    'ad253309e312cdf4c6aa002799ebefdf68294d05', 'c76a23ba3baa341875d0c458ef4b4f87730b53ed', '5527d5f144cfda0752bbd5460820d3e99a754be9', 'ad253309e312cdf4c6aa002799ebefdf68294d05', 'a085112bf3f19c32710e604135ef67a1875c6be8', 'ce8555ed729a6a752b6d5ff11b923ae97a6631f3', 'bda268ea459c313abf1cdf01c6354bc1a0e750f1', '54d892ff10821c68f757162492ee6f9e7d9b49dc', 'eb0e90be74e57ff0d3f85dd18162bc5a5d377e59', '7f38d6a45de868df30371a2e1895de3ae780c478'
]


counter = 0
total = 0
for i in range(0, len(student_answers)):
    counter += 1
    if answer_check(prepared_answers[i], right_answes[i]):
        result = "Верно"
        total += 1
    else:
        result = "!!! Неправильный ответ!"
    print(f'Вопрос {counter}: {result}')
print(f'Ваш результат: {total} из 10')
